from geopy.geocoders import Nominatim
from pyrogram.types import Message, Chat, User


def get_location_address(latitude: str, longitude: str) -> str:
    geolocator = Nominatim(user_agent="my_geolocator")
    location = geolocator.reverse((latitude, longitude), language="ru", namedetails=True)
    if location is None:
        return "–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        return location.address


def get_fullname(user: User) -> str:
    if user.first_name and user.last_name:
        return f"{user.first_name} {user.last_name} (@{user.username})"
    
    elif user.first_name and user.username:
        return f"{user.first_name} (@{user.username})"

    elif user.username:
        return f"@{user.username}"
    
    else:
        return f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π ({user.id})"


def user_info(user: User) -> str:
    username = ""

    if user.username:
        username = f"(@{user.username})"

    return (
        f"–ù–∞–ø–∏—Å–∞–ª(–∞):\n"
        f"#ID{user.id} | {user.first_name if hasattr(user, 'first_name') else ''} {user.last_name if hasattr(user, 'last_name') else ''} {username}\n"
        f"\n"
    )


def chat_info(chat: Chat) -> str:
    username = ""

    if chat.username:
        username = f"(@{chat.username})"

    return (
        f"–ß–∞—Ç:\n"
        f"#ID{chat.id} | {chat.first_name if hasattr(chat, 'first_name') else ''} {chat.last_name if hasattr(chat, 'last_name') else ''} {username}\n"
        "\n"
    )


def message_text(message: Message):
    return user_info(message.from_user) + chat_info(message.chat) + f"–°–æ–æ–±—â–µ–Ω–∏—è: {message.text}\n\n" + f"#MID{message.id}"


def message_photo(message: Message):
    print(message)
    caption = (
        f"–†–∞–∑–º–µ—Ä: {message.photo.file_size} –±–∞–π—Ç\n–†–∞–∑–º–µ—Ä—ã: {message.photo.width}x{message.photo.height}\n\n"
        f"#MID{message.id}"
    )
    return user_info(message.from_user) + chat_info(message.chat) + caption


def message_document(message: Message):
    caption = (
        f"–ò–º—è —Ñ–∞–π–ª–∞: {message.document.file_name}\n"
        f"MIME-—Ç–∏–ø: {message.document.mime_type}\n"
        f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {message.document.file_size} –±–∞–π—Ç\n"
    )
    if message.document.thumbs: caption += f"–ú–∏–Ω–∏–∞—Ç—é—Ä–∞: {message.document.thumbs[-1].width} x {message.document.thumbs[-1].height}\n\n"
    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_video(message: Message):
    caption = (
        f"–ò–º—è —Ñ–∞–π–ª–∞: {message.video.file_name}\n"
        f"MIME-—Ç–∏–ø: {message.video.mime_type}\n"
        f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {message.video.file_size} –±–∞–π—Ç\n"
        f"–†–∞–∑–º–µ—Ä—ã: {message.video.width}x{message.video.height}\n"
        f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {message.video.duration}\n\n"
    )
    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_sticker(message: Message):
    caption = (
        f"–†–∞–∑–º–µ—Ä: {message.sticker.file_size} –±–∞–π—Ç\n"
        f"–†–∞–∑–º–µ—Ä—ã: {message.sticker.width}x{message.sticker.height}\n"
        f"–≠–º–æ–¥–∑–∏: {message.sticker.emoji}\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–∞: {message.sticker.set_name}\n"
        f"–≠–º–æ–¥–∑–∏ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞: {message.sticker.is_animated}\n"
        f"–≠–º–æ–¥–∑–∏ –≤–∏–¥–µ–æ —Å—Ç–∏–∫–µ—Ä–∞: {message.sticker.is_video}\n"
        f"–¢–∏–ø —Å—Ç–∏–∫–µ—Ä–∞: {message.sticker.type}\n"
        f"–ú–∏–Ω–∏–∞—Ç—é—Ä–∞: {message.sticker.thumbs[-1].width} x {message.sticker.thumbs[-1].height}\n\n"
    )
    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_videonote(message: Message):
    caption = (
        f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {message.video_note.duration} —Å–µ–∫—É–Ω–¥\n"
        f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {message.video_note.file_size} –±–∞–π—Ç\n"
        f"–†–∞–∑–º–µ—Ä –º–∏–Ω–∏–∞—Ç—é—Ä—ã: {message.video_note.thumbs[-1].file_size} –±–∞–π—Ç\n\n"
    )

    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_voice(message: Message):
    caption = (
        f"MIME-—Ç–∏–ø: {message.voice.mime_type}\n"
        f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {message.voice.file_size}\n"
        f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {message.voice.duration}\n\n"
    )
    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_location(message: Message):
    address = get_location_address(message.location.latitude, message.location.longitude)

    caption = (
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏:\n"
        f"<code>{address}</code>\n"
        f"\n"
        f"Latitude: {message.location.latitude}\n"
        f"Longitude: {message.location.longitude}\n\n"
    )

    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_venue(message: Message):
    caption = (
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏:\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: <code>{message.venue.title}</code>\n"
        f"–ê–¥—Ä–µ—Å: <code>{message.venue.address}</code>\n"
        f"\n"
        f"Latitude: {message.venue.location.latitude}\n"
        f"Longitude: {message.venue.location.longitude}\n\n"
    )

    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_contact(message: Message):
    caption = (
        f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.contact.user_id}\n"
        f"–ò–º—è: {message.contact.first_name}\n"
        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {message.contact.phone_number}\n"
        f"–ö–∞—Ä—Ç–æ—á–∫–∞: <code>{message.contact.vcard}</code>\n"
    )

    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_audio(message: Message):
    caption = (
        f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {message.audio.performer}\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {message.audio.title}\n"
        f"–ò–º—è —Ñ–∞–π–ª–∞: {message.audio.file_name}\n"
        f"MIME-—Ç–∏–ø: {message.audio.mime_type}\n"
        f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {message.audio.duration} —Å–µ–∫—É–Ω–¥\n"
        f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {message.audio.file_size} –±–∞–π—Ç\n"
    )

    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_animation(message: Message):
    caption = (
        f"–ò–º—è —Ñ–∞–π–ª–∞: {message.animation.file_name}\n"
        f"MIME-—Ç–∏–ø: {message.animation.mime_type}\n"
        f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {message.animation.file_size} –±–∞–π—Ç\n"
        f"–†–∞–∑–º–µ—Ä—ã: {message.animation.width}x{message.animation.height}\n"
        f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {message.animation.duration}\n"
    )

    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def detection_of_an_unknown_message_type(message: Message):
    caption = f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:\n"
    caption += f"<code>{message}</code>\n\n"
    return user_info(message.from_user) + chat_info(message.chat) + caption + f"#MID{message.id}"


def message_deleted(messages: Message):
    caption = "–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n"

    for message in messages:
        caption += f"#MID{message.id}\n"

    return caption


def message_update(message: Message):
    caption = (
        f"–°–æ–æ–±—â–µ–Ω–∏—è: #MID{message.id}\n"
        f"–ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {message.text}"
    )
    return user_info(message.from_user) + chat_info(message.chat) + caption


def user_status_update(user: User):
    caption = (
        f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        f"–ò–º—è: {get_fullname(user)}\n"
    )
    
    if user.next_offline_date:
        return caption + \
            f"–°—Ç–∞—Ç—É—Å: {user.status.value} üü¢\n\n" + \
            f"#ID{user.id}\n\n"
        
    return caption + \
        f"–°—Ç–∞—Ç—É—Å: {user.status.value} üî¥\n" + \
        f"–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–Ω–ª–∞–π–Ω–∞: {user.last_online_date}\n\n" + \
        f"#ID{user.id}\n\n"
